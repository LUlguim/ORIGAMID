{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador.LENOVO\\\\Desktop\\\\clone\\\\origamid\\\\0600-react-router\\\\0604-nestedroutes\\\\src\\\\Produto.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, Routes, NavLink } from 'react-router-dom';\nimport ProdutoDescricao from './ProdutoDescricao';\nimport ProdutoAvaliacao from './ProdutoAvaliacao';\nimport ProdutoCustomizado from './ProdutoCustomizado';\n/*REACT ROUTER\r\nNested Routes\r\nUtilizamos nested routes quando precizamos de rotas dentro de rotas. Como por exemplo: perfil/editar e perfil/certificados e etc. Utilize o \\* para definir que existem outras rotas dentro.*/\n\n/* part 1\r\nconst Produto = () => {\r\n  const params = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Produto: {params.id}</h1>\r\n      <nav>\r\n        <NavLink to=\"\">Descrição</NavLink>{' '}\r\n        <NavLink to=\"avaliacao\">Avaliação</NavLink>{' '}\r\n        <NavLink to=\"customizado\">Customizado</NavLink>{' '}\r\n      </nav>\r\n      <Routes>\r\n        <Route path=\"/\" element={<ProdutoDescricao />} />{' '}\r\n        <Route path=\"avaliacao\" element={<ProdutoAvaliacao />} />{' '}\r\n        <Route path=\"customizado\" element={<ProdutoCustomizado />} />{' '}\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n*/\n\n/*Outlet\r\nOutra forma é definindo todos as rotas diretamente no App e utilizar o component Outlet para mostrarmos a rota.*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Produto = () => {\n  _s();\n\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Produto: \", params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"\",\n        children: \"Descri\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"avaliacao\",\n        children: \"Avalia\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"customizado\",\n        children: \"Customizado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Produto, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = Produto;\nexport default Produto;\n\nvar _c;\n\n$RefreshReg$(_c, \"Produto\");","map":{"version":3,"sources":["C:/Users/Administrador.LENOVO/Desktop/clone/origamid/0600-react-router/0604-nestedroutes/src/Produto.js"],"names":["useParams","Route","Routes","NavLink","ProdutoDescricao","ProdutoAvaliacao","ProdutoCustomizado","Produto","params","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,OAAnC,QAAkD,kBAAlD;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEA,sBACE;AAAA,4BACE;AAAA,8BAAcQ,MAAM,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAdD;;GAAMF,O;UACWP,S;;;KADXO,O;AAgBN,eAAeA,OAAf","sourcesContent":["import { useParams, Route, Routes, NavLink } from 'react-router-dom';\r\nimport ProdutoDescricao from './ProdutoDescricao';\r\nimport ProdutoAvaliacao from './ProdutoAvaliacao';\r\nimport ProdutoCustomizado from './ProdutoCustomizado';\r\n\r\n/*REACT ROUTER\r\nNested Routes\r\nUtilizamos nested routes quando precizamos de rotas dentro de rotas. Como por exemplo: perfil/editar e perfil/certificados e etc. Utilize o \\* para definir que existem outras rotas dentro.*/\r\n\r\n/* part 1\r\nconst Produto = () => {\r\n  const params = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Produto: {params.id}</h1>\r\n      <nav>\r\n        <NavLink to=\"\">Descrição</NavLink>{' '}\r\n        <NavLink to=\"avaliacao\">Avaliação</NavLink>{' '}\r\n        <NavLink to=\"customizado\">Customizado</NavLink>{' '}\r\n      </nav>\r\n      <Routes>\r\n        <Route path=\"/\" element={<ProdutoDescricao />} />{' '}\r\n        <Route path=\"avaliacao\" element={<ProdutoAvaliacao />} />{' '}\r\n        <Route path=\"customizado\" element={<ProdutoCustomizado />} />{' '}\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n*/\r\n\r\n/*Outlet\r\nOutra forma é definindo todos as rotas diretamente no App e utilizar o component Outlet para mostrarmos a rota.*/\r\n\r\nconst Produto = () => {\r\n  const params = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <h1>Produto: {params.id}</h1>\r\n      <nav>\r\n        <NavLink to=\"\">Descrição</NavLink>\r\n        <NavLink to=\"avaliacao\">Avaliação</NavLink>\r\n        <NavLink to=\"customizado\">Customizado</NavLink>\r\n      </nav>\r\n      <Outlet />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Produto;\r\n"]},"metadata":{},"sourceType":"module"}