{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\n/*\r\nuseForm\r\nPodemos definir um custom hook para formulários.\r\n*/\n\nconst types = {\n  cep: {\n    regex: /^\\d{5}-?\\d{3}$/,\n    message: 'Cep inválido'\n  },\n  email: {\n    regex: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    message: 'Email inválido'\n  }\n};\n\nconst useForm = type => {\n  _s();\n\n  const [value, setValue] = React.useState('');\n  const [error, setError] = React.useState(null);\n\n  function validate(value) {\n    if (type === false) return true;\n\n    if (value.length === 0) {\n      setError('Preencha um valor');\n      return false;\n    } else if (types[type] && !types[type].regex.test(value)) {\n      setError(types[type].message);\n      return false;\n    } else {\n      setError(null);\n      return true;\n    }\n  }\n\n  function onChange({\n    target\n  }) {\n    if (error) validate(target.value);\n    setValue(target.value);\n  }\n\n  return {\n    value,\n    setValue,\n    error,\n    onChange,\n    onBlur: () => validate(value),\n    validate: () => validate(value)\n  };\n};\n\n_s(useForm, \"2xVBvVJ4brbuuUPeIt3XLET8CmM=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/Administrador.LENOVO/Desktop/clone/origamid/0411-useform/src/Hooks/useForm.js"],"names":["React","types","cep","regex","message","email","useForm","type","value","setValue","useState","error","setError","validate","length","test","onChange","target","onBlur"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,GAAG,EAAE;AACHC,IAAAA,KAAK,EAAE,gBADJ;AAEHC,IAAAA,OAAO,EAAE;AAFN,GADO;AAKZC,EAAAA,KAAK,EAAE;AACLF,IAAAA,KAAK,EACH,uJAFG;AAGLC,IAAAA,OAAO,EAAE;AAHJ;AALK,CAAd;;AAYA,MAAME,OAAO,GAAIC,IAAD,IAAU;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACU,QAAN,CAAe,IAAf,CAA1B;;AAEA,WAASG,QAAT,CAAkBL,KAAlB,EAAyB;AACvB,QAAID,IAAI,KAAK,KAAb,EAAoB,OAAO,IAAP;;AACpB,QAAIC,KAAK,CAACM,MAAN,KAAiB,CAArB,EAAwB;AACtBF,MAAAA,QAAQ,CAAC,mBAAD,CAAR;AACA,aAAO,KAAP;AACD,KAHD,MAGO,IAAIX,KAAK,CAACM,IAAD,CAAL,IAAe,CAACN,KAAK,CAACM,IAAD,CAAL,CAAYJ,KAAZ,CAAkBY,IAAlB,CAAuBP,KAAvB,CAApB,EAAmD;AACxDI,MAAAA,QAAQ,CAACX,KAAK,CAACM,IAAD,CAAL,CAAYH,OAAb,CAAR;AACA,aAAO,KAAP;AACD,KAHM,MAGA;AACLQ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,aAAO,IAAP;AACD;AACF;;AAED,WAASI,QAAT,CAAkB;AAAEC,IAAAA;AAAF,GAAlB,EAA8B;AAC5B,QAAIN,KAAJ,EAAWE,QAAQ,CAACI,MAAM,CAACT,KAAR,CAAR;AACXC,IAAAA,QAAQ,CAACQ,MAAM,CAACT,KAAR,CAAR;AACD;;AAED,SAAO;AACLA,IAAAA,KADK;AAELC,IAAAA,QAFK;AAGLE,IAAAA,KAHK;AAILK,IAAAA,QAJK;AAKLE,IAAAA,MAAM,EAAE,MAAML,QAAQ,CAACL,KAAD,CALjB;AAMLK,IAAAA,QAAQ,EAAE,MAAMA,QAAQ,CAACL,KAAD;AANnB,GAAP;AAQD,CA/BD;;GAAMF,O;;AAiCN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\n\r\n/*\r\nuseForm\r\nPodemos definir um custom hook para formulários.\r\n*/\r\n\r\nconst types = {\r\n  cep: {\r\n    regex: /^\\d{5}-?\\d{3}$/,\r\n    message: 'Cep inválido',\r\n  },\r\n  email: {\r\n    regex:\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n    message: 'Email inválido',\r\n  },\r\n};\r\n\r\nconst useForm = (type) => {\r\n  const [value, setValue] = React.useState('');\r\n  const [error, setError] = React.useState(null);\r\n\r\n  function validate(value) {\r\n    if (type === false) return true;\r\n    if (value.length === 0) {\r\n      setError('Preencha um valor');\r\n      return false;\r\n    } else if (types[type] && !types[type].regex.test(value)) {\r\n      setError(types[type].message);\r\n      return false;\r\n    } else {\r\n      setError(null);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function onChange({ target }) {\r\n    if (error) validate(target.value);\r\n    setValue(target.value);\r\n  }\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    error,\r\n    onChange,\r\n    onBlur: () => validate(value),\r\n    validate: () => validate(value),\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n"]},"metadata":{},"sourceType":"module"}